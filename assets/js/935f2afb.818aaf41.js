"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Docs","href":"/docs/","docId":"docs/README"},{"type":"category","label":"Language design","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Aliases","href":"/docs/design/aliases","docId":"docs/design/aliases"},{"type":"link","label":"Blocks and statements","href":"/docs/design/blocks_and_statements","docId":"docs/design/blocks_and_statements"},{"type":"link","label":"Classes","href":"/docs/design/classes","docId":"docs/design/classes"},{"type":"category","label":"Code and name organization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Source files","href":"/docs/design/code_and_name_organization/source_files","docId":"docs/design/code_and_name_organization/source_files"}],"href":"/docs/design/code_and_name_organization/"},{"type":"category","label":"Control flow","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Control flow","href":"/docs/design/control_flow/conditionals","docId":"docs/design/control_flow/conditionals"},{"type":"link","label":"Loops","href":"/docs/design/control_flow/loops","docId":"docs/design/control_flow/loops"},{"type":"link","label":"return","href":"/docs/design/control_flow/return","docId":"docs/design/control_flow/return"}],"href":"/docs/design/control_flow/"},{"type":"category","label":"Expressions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arithmetic","href":"/docs/design/expressions/arithmetic","docId":"docs/design/expressions/arithmetic"},{"type":"link","label":"`as` expressions","href":"/docs/design/expressions/as_expressions","docId":"docs/design/expressions/as_expressions"},{"type":"link","label":"Bitwise and shift operators","href":"/docs/design/expressions/bitwise","docId":"docs/design/expressions/bitwise"},{"type":"link","label":"Comparison operators","href":"/docs/design/expressions/comparison_operators","docId":"docs/design/expressions/comparison_operators"},{"type":"link","label":"`if` expressions","href":"/docs/design/expressions/if","docId":"docs/design/expressions/if"},{"type":"link","label":"Implicit conversions","href":"/docs/design/expressions/implicit_conversions","docId":"docs/design/expressions/implicit_conversions"},{"type":"link","label":"Logical operators","href":"/docs/design/expressions/logical_operators","docId":"docs/design/expressions/logical_operators"},{"type":"link","label":"Qualified names and member access","href":"/docs/design/expressions/member_access","docId":"docs/design/expressions/member_access"}],"href":"/docs/design/expressions/"},{"type":"link","label":"Functions","href":"/docs/design/functions","docId":"docs/design/functions"},{"type":"category","label":"Generics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Carbon: alternatives to coherence","href":"/docs/design/generics/appendix-coherence","docId":"docs/design/generics/appendix-coherence"},{"type":"link","label":"Generics: Details","href":"/docs/design/generics/details","docId":"docs/design/generics/details"},{"type":"link","label":"Generics: Goals","href":"/docs/design/generics/goals","docId":"docs/design/generics/goals"},{"type":"link","label":"Generics: Overview","href":"/docs/design/generics/overview","docId":"docs/design/generics/overview"},{"type":"link","label":"Generics: Terminology","href":"/docs/design/generics/terminology","docId":"docs/design/generics/terminology"}],"href":"/docs/design/generics/"},{"type":"category","label":"Bidirectional interoperability with C/C++","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interoperability philosophy and goals","href":"/docs/design/interoperability/philosophy_and_goals","docId":"docs/design/interoperability/philosophy_and_goals"}],"href":"/docs/design/interoperability/"},{"type":"category","label":"Lexical conventions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Numeric literals","href":"/docs/design/lexical_conventions/numeric_literals","docId":"docs/design/lexical_conventions/numeric_literals"},{"type":"link","label":"String literals","href":"/docs/design/lexical_conventions/string_literals","docId":"docs/design/lexical_conventions/string_literals"},{"type":"link","label":"Whitespace","href":"/docs/design/lexical_conventions/whitespace","docId":"docs/design/lexical_conventions/whitespace"},{"type":"link","label":"Words","href":"/docs/design/lexical_conventions/words","docId":"docs/design/lexical_conventions/words"}],"href":"/docs/design/lexical_conventions/"},{"type":"link","label":"Metaprogramming","href":"/docs/design/metaprogramming","docId":"docs/design/metaprogramming"},{"type":"link","label":"Name lookup","href":"/docs/design/name_lookup","docId":"docs/design/name_lookup"},{"type":"link","label":"Naming conventions","href":"/docs/design/naming_conventions","docId":"docs/design/naming_conventions"},{"type":"link","label":"Pattern matching","href":"/docs/design/pattern_matching","docId":"docs/design/pattern_matching"},{"type":"link","label":"Primitive types","href":"/docs/design/primitive_types","docId":"docs/design/primitive_types"},{"type":"link","label":"Templates","href":"/docs/design/templates","docId":"docs/design/templates"},{"type":"link","label":"Tuples","href":"/docs/design/tuples","docId":"docs/design/tuples"},{"type":"link","label":"Type inference","href":"/docs/design/type_inference","docId":"docs/design/type_inference"},{"type":"link","label":"Variables","href":"/docs/design/variables","docId":"docs/design/variables"}],"href":"/docs/design/"},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Glossary","href":"/docs/guides/glossary","docId":"docs/guides/glossary"}],"href":"/docs/guides/"},{"type":"category","label":"images","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Front page snippets for Carbon","href":"/docs/images/snippets","docId":"docs/images/snippets"}]},{"type":"category","label":"Project","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Code review","href":"/docs/project/code_review","docId":"docs/project/code_review"},{"type":"link","label":"Contribution tools","href":"/docs/project/contribution_tools","docId":"docs/project/contribution_tools"},{"type":"link","label":"C++ style guide","href":"/docs/project/cpp_style_guide","docId":"docs/project/cpp_style_guide"},{"type":"link","label":"Language design style guide","href":"/docs/project/design_style_guide","docId":"docs/project/design_style_guide"},{"type":"link","label":"Difficulties improving C++","href":"/docs/project/difficulties_improving_cpp","docId":"docs/project/difficulties_improving_cpp"},{"type":"link","label":"Evolution and governance","href":"/docs/project/evolution","docId":"docs/project/evolution"},{"type":"link","label":"Project FAQ","href":"/docs/project/faq","docId":"docs/project/faq"},{"type":"link","label":"Goals","href":"/docs/project/goals","docId":"docs/project/goals"},{"type":"link","label":"Groups","href":"/docs/project/groups","docId":"docs/project/groups"},{"type":"category","label":"Principles","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Principle: Errors are values","href":"/docs/project/principles/error_handling","docId":"docs/project/principles/error_handling"},{"type":"link","label":"Principle: Information accumulation","href":"/docs/project/principles/information_accumulation","docId":"docs/project/principles/information_accumulation"},{"type":"link","label":"Principle: All APIs are library APIs","href":"/docs/project/principles/library_apis_only","docId":"docs/project/principles/library_apis_only"},{"type":"link","label":"Principle: Low context-sensitivity","href":"/docs/project/principles/low_context_sensitivity","docId":"docs/project/principles/low_context_sensitivity"},{"type":"link","label":"Principle: Prefer providing only one way to do a given thing","href":"/docs/project/principles/one_way","docId":"docs/project/principles/one_way"},{"type":"link","label":"Safety strategy","href":"/docs/project/principles/safety_strategy","docId":"docs/project/principles/safety_strategy"},{"type":"link","label":"Principle: One static open extension mechanism","href":"/docs/project/principles/static_open_extension","docId":"docs/project/principles/static_open_extension"},{"type":"link","label":"Principle: Success criteria","href":"/docs/project/principles/success_criteria","docId":"docs/project/principles/success_criteria"}],"href":"/docs/project/principles/"},{"type":"link","label":"Trunk-based pull-request GitHub workflow","href":"/docs/project/pull_request_workflow","docId":"docs/project/pull_request_workflow"},{"type":"link","label":"Roadmap","href":"/docs/project/roadmap","docId":"docs/project/roadmap"},{"type":"link","label":"Roadmap process","href":"/docs/project/roadmap_process","docId":"docs/project/roadmap_process"}],"href":"/docs/project/"},{"type":"category","label":"Spec","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Carbon language specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Execution","href":"/docs/spec/lang/execution","docId":"docs/spec/lang/execution"},{"type":"link","label":"Lexical analysis","href":"/docs/spec/lang/lex","docId":"docs/spec/lang/lex"},{"type":"link","label":"Libraries and packages","href":"/docs/spec/lang/libs","docId":"docs/spec/lang/libs"},{"type":"link","label":"Names","href":"/docs/spec/lang/names","docId":"docs/spec/lang/names"},{"type":"link","label":"Parsing","href":"/docs/spec/lang/parsing","docId":"docs/spec/lang/parsing"},{"type":"link","label":"Semantic analysis","href":"/docs/spec/lang/semantics","docId":"docs/spec/lang/semantics"}],"href":"/docs/spec/lang/"},{"type":"link","label":"Carbon standard library specification","href":"/docs/spec/lib/","docId":"docs/spec/lib/README"}],"href":"/docs/spec/"}],"design":[{"type":"link","label":"Language design","href":"/docs/design/","docId":"docs/design/README"},{"type":"link","label":"Aliases","href":"/docs/design/aliases","docId":"docs/design/aliases"},{"type":"link","label":"Blocks and statements","href":"/docs/design/blocks_and_statements","docId":"docs/design/blocks_and_statements"},{"type":"link","label":"Classes","href":"/docs/design/classes","docId":"docs/design/classes"},{"type":"category","label":"Code and name organization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Source files","href":"/docs/design/code_and_name_organization/source_files","docId":"docs/design/code_and_name_organization/source_files"}],"href":"/docs/design/code_and_name_organization/"},{"type":"category","label":"Control flow","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Control flow","href":"/docs/design/control_flow/conditionals","docId":"docs/design/control_flow/conditionals"},{"type":"link","label":"Loops","href":"/docs/design/control_flow/loops","docId":"docs/design/control_flow/loops"},{"type":"link","label":"return","href":"/docs/design/control_flow/return","docId":"docs/design/control_flow/return"}],"href":"/docs/design/control_flow/"},{"type":"category","label":"Expressions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arithmetic","href":"/docs/design/expressions/arithmetic","docId":"docs/design/expressions/arithmetic"},{"type":"link","label":"`as` expressions","href":"/docs/design/expressions/as_expressions","docId":"docs/design/expressions/as_expressions"},{"type":"link","label":"Bitwise and shift operators","href":"/docs/design/expressions/bitwise","docId":"docs/design/expressions/bitwise"},{"type":"link","label":"Comparison operators","href":"/docs/design/expressions/comparison_operators","docId":"docs/design/expressions/comparison_operators"},{"type":"link","label":"`if` expressions","href":"/docs/design/expressions/if","docId":"docs/design/expressions/if"},{"type":"link","label":"Implicit conversions","href":"/docs/design/expressions/implicit_conversions","docId":"docs/design/expressions/implicit_conversions"},{"type":"link","label":"Logical operators","href":"/docs/design/expressions/logical_operators","docId":"docs/design/expressions/logical_operators"},{"type":"link","label":"Qualified names and member access","href":"/docs/design/expressions/member_access","docId":"docs/design/expressions/member_access"}],"href":"/docs/design/expressions/"},{"type":"link","label":"Functions","href":"/docs/design/functions","docId":"docs/design/functions"},{"type":"category","label":"Generics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Carbon: alternatives to coherence","href":"/docs/design/generics/appendix-coherence","docId":"docs/design/generics/appendix-coherence"},{"type":"link","label":"Generics: Details","href":"/docs/design/generics/details","docId":"docs/design/generics/details"},{"type":"link","label":"Generics: Goals","href":"/docs/design/generics/goals","docId":"docs/design/generics/goals"},{"type":"link","label":"Generics: Overview","href":"/docs/design/generics/overview","docId":"docs/design/generics/overview"},{"type":"link","label":"Generics: Terminology","href":"/docs/design/generics/terminology","docId":"docs/design/generics/terminology"}],"href":"/docs/design/generics/"},{"type":"category","label":"Bidirectional interoperability with C/C++","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interoperability philosophy and goals","href":"/docs/design/interoperability/philosophy_and_goals","docId":"docs/design/interoperability/philosophy_and_goals"}],"href":"/docs/design/interoperability/"},{"type":"category","label":"Lexical conventions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Numeric literals","href":"/docs/design/lexical_conventions/numeric_literals","docId":"docs/design/lexical_conventions/numeric_literals"},{"type":"link","label":"String literals","href":"/docs/design/lexical_conventions/string_literals","docId":"docs/design/lexical_conventions/string_literals"},{"type":"link","label":"Whitespace","href":"/docs/design/lexical_conventions/whitespace","docId":"docs/design/lexical_conventions/whitespace"},{"type":"link","label":"Words","href":"/docs/design/lexical_conventions/words","docId":"docs/design/lexical_conventions/words"}],"href":"/docs/design/lexical_conventions/"},{"type":"link","label":"Metaprogramming","href":"/docs/design/metaprogramming","docId":"docs/design/metaprogramming"},{"type":"link","label":"Name lookup","href":"/docs/design/name_lookup","docId":"docs/design/name_lookup"},{"type":"link","label":"Naming conventions","href":"/docs/design/naming_conventions","docId":"docs/design/naming_conventions"},{"type":"link","label":"Pattern matching","href":"/docs/design/pattern_matching","docId":"docs/design/pattern_matching"},{"type":"link","label":"Primitive types","href":"/docs/design/primitive_types","docId":"docs/design/primitive_types"},{"type":"link","label":"Templates","href":"/docs/design/templates","docId":"docs/design/templates"},{"type":"link","label":"Tuples","href":"/docs/design/tuples","docId":"docs/design/tuples"},{"type":"link","label":"Type inference","href":"/docs/design/type_inference","docId":"docs/design/type_inference"},{"type":"link","label":"Variables","href":"/docs/design/variables","docId":"docs/design/variables"}],"project":[{"type":"link","label":"Project","href":"/docs/project/","docId":"docs/project/README"},{"type":"link","label":"Code review","href":"/docs/project/code_review","docId":"docs/project/code_review"},{"type":"link","label":"Contribution tools","href":"/docs/project/contribution_tools","docId":"docs/project/contribution_tools"},{"type":"link","label":"C++ style guide","href":"/docs/project/cpp_style_guide","docId":"docs/project/cpp_style_guide"},{"type":"link","label":"Language design style guide","href":"/docs/project/design_style_guide","docId":"docs/project/design_style_guide"},{"type":"link","label":"Difficulties improving C++","href":"/docs/project/difficulties_improving_cpp","docId":"docs/project/difficulties_improving_cpp"},{"type":"link","label":"Evolution and governance","href":"/docs/project/evolution","docId":"docs/project/evolution"},{"type":"link","label":"Project FAQ","href":"/docs/project/faq","docId":"docs/project/faq"},{"type":"link","label":"Goals","href":"/docs/project/goals","docId":"docs/project/goals"},{"type":"link","label":"Groups","href":"/docs/project/groups","docId":"docs/project/groups"},{"type":"category","label":"Principles","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Principle: Errors are values","href":"/docs/project/principles/error_handling","docId":"docs/project/principles/error_handling"},{"type":"link","label":"Principle: Information accumulation","href":"/docs/project/principles/information_accumulation","docId":"docs/project/principles/information_accumulation"},{"type":"link","label":"Principle: All APIs are library APIs","href":"/docs/project/principles/library_apis_only","docId":"docs/project/principles/library_apis_only"},{"type":"link","label":"Principle: Low context-sensitivity","href":"/docs/project/principles/low_context_sensitivity","docId":"docs/project/principles/low_context_sensitivity"},{"type":"link","label":"Principle: Prefer providing only one way to do a given thing","href":"/docs/project/principles/one_way","docId":"docs/project/principles/one_way"},{"type":"link","label":"Safety strategy","href":"/docs/project/principles/safety_strategy","docId":"docs/project/principles/safety_strategy"},{"type":"link","label":"Principle: One static open extension mechanism","href":"/docs/project/principles/static_open_extension","docId":"docs/project/principles/static_open_extension"},{"type":"link","label":"Principle: Success criteria","href":"/docs/project/principles/success_criteria","docId":"docs/project/principles/success_criteria"}],"href":"/docs/project/principles/"},{"type":"link","label":"Trunk-based pull-request GitHub workflow","href":"/docs/project/pull_request_workflow","docId":"docs/project/pull_request_workflow"},{"type":"link","label":"Roadmap","href":"/docs/project/roadmap","docId":"docs/project/roadmap"},{"type":"link","label":"Roadmap process","href":"/docs/project/roadmap_process","docId":"docs/project/roadmap_process"}],"guides":[{"type":"link","label":"Guides","href":"/docs/guides/","docId":"docs/guides/README"},{"type":"link","label":"Glossary","href":"/docs/guides/glossary","docId":"docs/guides/glossary"}],"spec":[{"type":"link","label":"Spec","href":"/docs/spec/","docId":"docs/spec/README"},{"type":"category","label":"Carbon language specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Execution","href":"/docs/spec/lang/execution","docId":"docs/spec/lang/execution"},{"type":"link","label":"Lexical analysis","href":"/docs/spec/lang/lex","docId":"docs/spec/lang/lex"},{"type":"link","label":"Libraries and packages","href":"/docs/spec/lang/libs","docId":"docs/spec/lang/libs"},{"type":"link","label":"Names","href":"/docs/spec/lang/names","docId":"docs/spec/lang/names"},{"type":"link","label":"Parsing","href":"/docs/spec/lang/parsing","docId":"docs/spec/lang/parsing"},{"type":"link","label":"Semantic analysis","href":"/docs/spec/lang/semantics","docId":"docs/spec/lang/semantics"}],"href":"/docs/spec/lang/"},{"type":"link","label":"Carbon standard library specification","href":"/docs/spec/lib/","docId":"docs/spec/lib/README"}]},"docs":{"docs/design/aliases":{"id":"docs/design/aliases","title":"Aliases","description":"\x3c!--","sidebar":"design"},"docs/design/blocks_and_statements":{"id":"docs/design/blocks_and_statements","title":"Blocks and statements","description":"\x3c!--","sidebar":"design"},"docs/design/classes":{"id":"docs/design/classes","title":"Classes","description":"\x3c!--","sidebar":"design"},"docs/design/code_and_name_organization/README":{"id":"docs/design/code_and_name_organization/README","title":"Code and name organization","description":"\x3c!--","sidebar":"design"},"docs/design/code_and_name_organization/source_files":{"id":"docs/design/code_and_name_organization/source_files","title":"Source files","description":"\x3c!--","sidebar":"design"},"docs/design/control_flow/conditionals":{"id":"docs/design/control_flow/conditionals","title":"Control flow","description":"\x3c!--","sidebar":"design"},"docs/design/control_flow/loops":{"id":"docs/design/control_flow/loops","title":"Loops","description":"\x3c!--","sidebar":"design"},"docs/design/control_flow/README":{"id":"docs/design/control_flow/README","title":"Control flow","description":"\x3c!--","sidebar":"design"},"docs/design/control_flow/return":{"id":"docs/design/control_flow/return","title":"return","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/arithmetic":{"id":"docs/design/expressions/arithmetic","title":"Arithmetic","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/as_expressions":{"id":"docs/design/expressions/as_expressions","title":"`as` expressions","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/bitwise":{"id":"docs/design/expressions/bitwise","title":"Bitwise and shift operators","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/comparison_operators":{"id":"docs/design/expressions/comparison_operators","title":"Comparison operators","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/if":{"id":"docs/design/expressions/if","title":"`if` expressions","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/implicit_conversions":{"id":"docs/design/expressions/implicit_conversions","title":"Implicit conversions","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/logical_operators":{"id":"docs/design/expressions/logical_operators","title":"Logical operators","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/member_access":{"id":"docs/design/expressions/member_access","title":"Qualified names and member access","description":"\x3c!--","sidebar":"design"},"docs/design/expressions/README":{"id":"docs/design/expressions/README","title":"Expressions","description":"\x3c!--","sidebar":"design"},"docs/design/functions":{"id":"docs/design/functions","title":"Functions","description":"\x3c!--","sidebar":"design"},"docs/design/generics/appendix-coherence":{"id":"docs/design/generics/appendix-coherence","title":"Carbon: alternatives to coherence","description":"\x3c!--","sidebar":"design"},"docs/design/generics/details":{"id":"docs/design/generics/details","title":"Generics: Details","description":"\x3c!--","sidebar":"design"},"docs/design/generics/goals":{"id":"docs/design/generics/goals","title":"Generics: Goals","description":"\x3c!--","sidebar":"design"},"docs/design/generics/overview":{"id":"docs/design/generics/overview","title":"Generics: Overview","description":"\x3c!--","sidebar":"design"},"docs/design/generics/README":{"id":"docs/design/generics/README","title":"Generics","description":"\x3c!--","sidebar":"design"},"docs/design/generics/terminology":{"id":"docs/design/generics/terminology","title":"Generics: Terminology","description":"\x3c!--","sidebar":"design"},"docs/design/interoperability/philosophy_and_goals":{"id":"docs/design/interoperability/philosophy_and_goals","title":"Interoperability philosophy and goals","description":"\x3c!--","sidebar":"design"},"docs/design/interoperability/README":{"id":"docs/design/interoperability/README","title":"Bidirectional interoperability with C/C++","description":"\x3c!--","sidebar":"design"},"docs/design/lexical_conventions/numeric_literals":{"id":"docs/design/lexical_conventions/numeric_literals","title":"Numeric literals","description":"\x3c!--","sidebar":"design"},"docs/design/lexical_conventions/README":{"id":"docs/design/lexical_conventions/README","title":"Lexical conventions","description":"\x3c!--","sidebar":"design"},"docs/design/lexical_conventions/string_literals":{"id":"docs/design/lexical_conventions/string_literals","title":"String literals","description":"\x3c!--","sidebar":"design"},"docs/design/lexical_conventions/whitespace":{"id":"docs/design/lexical_conventions/whitespace","title":"Whitespace","description":"\x3c!--","sidebar":"design"},"docs/design/lexical_conventions/words":{"id":"docs/design/lexical_conventions/words","title":"Words","description":"\x3c!--","sidebar":"design"},"docs/design/metaprogramming":{"id":"docs/design/metaprogramming","title":"Metaprogramming","description":"\x3c!--","sidebar":"design"},"docs/design/name_lookup":{"id":"docs/design/name_lookup","title":"Name lookup","description":"\x3c!--","sidebar":"design"},"docs/design/naming_conventions":{"id":"docs/design/naming_conventions","title":"Naming conventions","description":"\x3c!--","sidebar":"design"},"docs/design/pattern_matching":{"id":"docs/design/pattern_matching","title":"Pattern matching","description":"\x3c!--","sidebar":"design"},"docs/design/primitive_types":{"id":"docs/design/primitive_types","title":"Primitive types","description":"\x3c!--","sidebar":"design"},"docs/design/README":{"id":"docs/design/README","title":"Language design","description":"\x3c!--","sidebar":"design"},"docs/design/templates":{"id":"docs/design/templates","title":"Templates","description":"\x3c!--","sidebar":"design"},"docs/design/tuples":{"id":"docs/design/tuples","title":"Tuples","description":"\x3c!--","sidebar":"design"},"docs/design/type_inference":{"id":"docs/design/type_inference","title":"Type inference","description":"\x3c!--","sidebar":"design"},"docs/design/variables":{"id":"docs/design/variables","title":"Variables","description":"\x3c!--","sidebar":"design"},"docs/guides/glossary":{"id":"docs/guides/glossary","title":"Glossary","description":"\x3c!--","sidebar":"guides"},"docs/guides/README":{"id":"docs/guides/README","title":"Guides","description":"\x3c!--","sidebar":"guides"},"docs/images/snippets":{"id":"docs/images/snippets","title":"Front page snippets for Carbon","description":"\x3c!--","sidebar":"docs"},"docs/project/code_review":{"id":"docs/project/code_review","title":"Code review","description":"\x3c!--","sidebar":"project"},"docs/project/contribution_tools":{"id":"docs/project/contribution_tools","title":"Contribution tools","description":"\x3c!--","sidebar":"project"},"docs/project/cpp_style_guide":{"id":"docs/project/cpp_style_guide","title":"C++ style guide","description":"\x3c!--","sidebar":"project"},"docs/project/design_style_guide":{"id":"docs/project/design_style_guide","title":"Language design style guide","description":"\x3c!--","sidebar":"project"},"docs/project/difficulties_improving_cpp":{"id":"docs/project/difficulties_improving_cpp","title":"Difficulties improving C++","description":"\x3c!--","sidebar":"project"},"docs/project/evolution":{"id":"docs/project/evolution","title":"Evolution and governance","description":"\x3c!--","sidebar":"project"},"docs/project/faq":{"id":"docs/project/faq","title":"Project FAQ","description":"\x3c!--","sidebar":"project"},"docs/project/goals":{"id":"docs/project/goals","title":"Goals","description":"\x3c!--","sidebar":"project"},"docs/project/groups":{"id":"docs/project/groups","title":"Groups","description":"\x3c!--","sidebar":"project"},"docs/project/principles/error_handling":{"id":"docs/project/principles/error_handling","title":"Principle: Errors are values","description":"\x3c!--","sidebar":"project"},"docs/project/principles/information_accumulation":{"id":"docs/project/principles/information_accumulation","title":"Principle: Information accumulation","description":"\x3c!--","sidebar":"project"},"docs/project/principles/library_apis_only":{"id":"docs/project/principles/library_apis_only","title":"Principle: All APIs are library APIs","description":"\x3c!--","sidebar":"project"},"docs/project/principles/low_context_sensitivity":{"id":"docs/project/principles/low_context_sensitivity","title":"Principle: Low context-sensitivity","description":"\x3c!--","sidebar":"project"},"docs/project/principles/one_way":{"id":"docs/project/principles/one_way","title":"Principle: Prefer providing only one way to do a given thing","description":"\x3c!--","sidebar":"project"},"docs/project/principles/README":{"id":"docs/project/principles/README","title":"Principles","description":"\x3c!--","sidebar":"project"},"docs/project/principles/safety_strategy":{"id":"docs/project/principles/safety_strategy","title":"Safety strategy","description":"\x3c!--","sidebar":"project"},"docs/project/principles/static_open_extension":{"id":"docs/project/principles/static_open_extension","title":"Principle: One static open extension mechanism","description":"\x3c!--","sidebar":"project"},"docs/project/principles/success_criteria":{"id":"docs/project/principles/success_criteria","title":"Principle: Success criteria","description":"\x3c!--","sidebar":"project"},"docs/project/pull_request_workflow":{"id":"docs/project/pull_request_workflow","title":"Trunk-based pull-request GitHub workflow","description":"\x3c!--","sidebar":"project"},"docs/project/README":{"id":"docs/project/README","title":"Project","description":"\x3c!--","sidebar":"project"},"docs/project/roadmap":{"id":"docs/project/roadmap","title":"Roadmap","description":"\x3c!--","sidebar":"project"},"docs/project/roadmap_process":{"id":"docs/project/roadmap_process","title":"Roadmap process","description":"\x3c!--","sidebar":"project"},"docs/README":{"id":"docs/README","title":"Docs","description":"\x3c!--","sidebar":"docs"},"docs/spec/lang/execution":{"id":"docs/spec/lang/execution","title":"Execution","description":"\x3c!--","sidebar":"spec"},"docs/spec/lang/lex":{"id":"docs/spec/lang/lex","title":"Lexical analysis","description":"\x3c!--","sidebar":"spec"},"docs/spec/lang/libs":{"id":"docs/spec/lang/libs","title":"Libraries and packages","description":"\x3c!--","sidebar":"spec"},"docs/spec/lang/names":{"id":"docs/spec/lang/names","title":"Names","description":"\x3c!--","sidebar":"spec"},"docs/spec/lang/parsing":{"id":"docs/spec/lang/parsing","title":"Parsing","description":"\x3c!--","sidebar":"spec"},"docs/spec/lang/README":{"id":"docs/spec/lang/README","title":"Carbon language specification","description":"\x3c!--","sidebar":"spec"},"docs/spec/lang/semantics":{"id":"docs/spec/lang/semantics","title":"Semantic analysis","description":"\x3c!--","sidebar":"spec"},"docs/spec/lib/README":{"id":"docs/spec/lib/README","title":"Carbon standard library specification","description":"\x3c!--","sidebar":"spec"},"docs/spec/README":{"id":"docs/spec/README","title":"Spec","description":"\x3c!--","sidebar":"spec"},"README":{"id":"README","title":"Carbon Language: <br/> An experimental successor to C++","description":"\x3c!--"}}}')}}]);
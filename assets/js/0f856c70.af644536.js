"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3701],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(g,l(l({ref:t},p),{},{components:r})):a.createElement(g,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6028:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={},l="Groups",i={unversionedId:"docs/project/groups",id:"docs/project/groups",title:"Groups",description:"\x3c!--",source:"@site/../docs/project/groups.md",sourceDirName:"docs/project",slug:"/docs/project/groups",permalink:"/docs/project/groups",draft:!1,editUrl:"https://github.com/carbon-language/carbon-lang/blob/trunk/docs/../docs/project/groups.md",tags:[],version:"current",frontMatter:{},sidebar:"project",previous:{title:"Goals",permalink:"/docs/project/goals"},next:{title:"Principles",permalink:"/docs/project/principles/"}},s={},c=[{value:"All contributors",id:"all-contributors",level:2},{value:"Team-specific access",id:"team-specific-access",level:2},{value:"Admins",id:"admins",level:3},{value:"Carbon leads",id:"carbon-leads",level:3},{value:"Conduct team",id:"conduct-team",level:3},{value:"Implementation team",id:"implementation-team",level:3}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"groups"},"Groups"),(0,n.kt)("p",null,"These are groups used by the Carbon Language project, listed here for central\ntracking."),(0,n.kt)("p",null,"We use a mix of:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Groups to assist contacting key contributors on appropriate systems:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"GitHub teams")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Discord roles")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Google groups"),", usually as Google Drive ACLs. We generally won't use\nthese as contact lists, unless specifically mentioned. Please prefer other\ncommunity forums.")),(0,n.kt)("h2",{id:"all-contributors"},"All contributors"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/orgs/carbon-language/people"},"GitHub organization"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/orgs/carbon-language/teams/contributors-with-label-access"},"GitHub team: Contributors with label access"),":\nMirrors the GitHub organization for write access.\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/carbon-language/carbon-lang/blob/trunk/github_tools/update_label_access.py"},"Manually updated"),"."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://discord.com/app"},"Discord access")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://groups.google.com/g/carbon-lang-contributors"},"Google group"),": Grants\nGoogle Drive access.")),(0,n.kt)("h2",{id:"team-specific-access"},"Team-specific access"),(0,n.kt)("p",null,"Any team-specific access will typically be managed by a team owner or admin,\nwhen somebody joins the respective team."),(0,n.kt)("h3",{id:"admins"},"Admins"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/orgs/carbon-language/people?query=role%3Aowner"},"GitHub owners")),(0,n.kt)("li",{parentName:"ul"},"Discord role: admin")),(0,n.kt)("h3",{id:"carbon-leads"},"Carbon leads"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/orgs/carbon-language/teams/carbon-leads"},"GitHub team")),(0,n.kt)("li",{parentName:"ul"},"Discord role: carbon-leads")),(0,n.kt)("h3",{id:"conduct-team"},"Conduct team"),(0,n.kt)("p",null,"For most purposes, the Core team should be contacted about conduct issues."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://groups.google.com/g/carbon-lang-conduct-team"},"Google group"),":\nPrimarily a contact list.")),(0,n.kt)("h3",{id:"implementation-team"},"Implementation team"),(0,n.kt)("p",null,"This team is responsible for development of Carbon's primary, reference\nimplementation and toolchain. It also oversees other related implementation work\nwithin the Carbon project, from tooling of the language spec to test suites.\nThere may be some overlap with ",(0,n.kt)("a",{parentName:"p",href:"#admins"},"admins")," -- any issue can be resolved by\nescalating to the ",(0,n.kt)("a",{parentName:"p",href:"#carbon-leads"},"Carbon leads"),". Notably, this team is ",(0,n.kt)("em",{parentName:"p"},"not"),"\nresponsible for the ",(0,n.kt)("em",{parentName:"p"},"design")," of the language itself, only for its\nimplementation."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/orgs/carbon-language/teams/implementation-team"},"GitHub team")),(0,n.kt)("li",{parentName:"ul"},"Discord role: implementation-team")))}u.isMDXComponent=!0}}]);
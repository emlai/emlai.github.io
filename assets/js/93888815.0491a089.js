"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6632],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=p(n),m=o,d=h["".concat(s,".").concat(m)]||h[m]||c[m]||i;return n?a.createElement(d,r(r({ref:t},u),{},{components:n})):a.createElement(d,r({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={},r="Roadmap",l={unversionedId:"docs/project/roadmap",id:"docs/project/roadmap",title:"Roadmap",description:"\x3c!--",source:"@site/../docs/project/roadmap.md",sourceDirName:"docs/project",slug:"/docs/project/roadmap",permalink:"/docs/project/roadmap",draft:!1,editUrl:"https://github.com/carbon-language/carbon-lang/blob/trunk/docs/../docs/project/roadmap.md",tags:[],version:"current",frontMatter:{},sidebar:"project",previous:{title:"Trunk-based pull-request GitHub workflow",permalink:"/docs/project/pull_request_workflow"},next:{title:"Roadmap process",permalink:"/docs/project/roadmap_process"}},s={},p=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Objective for 2022: make Carbon public, finish 0.1 language",id:"objective-for-2022-make-carbon-public-finish-01-language",level:2},{value:"Completing the language design",id:"completing-the-language-design",level:3},{value:"Going public",id:"going-public",level:3},{value:"Key results in 2022",id:"key-results-in-2022",level:2},{value:"Broaden participation so no organization is &gt;50%",id:"broaden-participation-so-no-organization-is-50",level:3},{value:"Example ports of C++ libraries to Carbon (100% of woff2, 99% of RE2)",id:"example-ports-of-c-libraries-to-carbon-100-of-woff2-99-of-re2",level:3},{value:"Language design covers the syntax and semantics of the example port code.",id:"language-design-covers-the-syntax-and-semantics-of-the-example-port-code",level:4},{value:"Demo implementation of core features with working examples",id:"demo-implementation-of-core-features-with-working-examples",level:3},{value:"Carbon explorer implementation of core features with test cases",id:"carbon-explorer-implementation-of-core-features-with-test-cases",level:3},{value:"Beyond 2022",id:"beyond-2022",level:2},{value:"Potential 2023 goals: finish 0.2 language, stop experimenting",id:"potential-2023-goals-finish-02-language-stop-experimenting",level:3},{value:"Potential 2024-2025 goals: <em>ship</em> 1.0 language &amp; organization",id:"potential-2024-2025-goals-ship-10-language--organization",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"roadmap"},"Roadmap"),(0,o.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#objective-for-2022-make-carbon-public-finish-01-language"},"Objective for 2022: make Carbon public, finish 0.1 language"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#completing-the-language-design"},"Completing the language design")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#going-public"},"Going public")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#key-results-in-2022"},"Key results in 2022"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#broaden-participation-so-no-organization-is-50"},"Broaden participation so no organization is >50%")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#example-ports-of-c-libraries-to-carbon-100-of-woff2-99-of-re2"},"Example ports of C++ libraries to Carbon (100% of woff2, 99% of RE2)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#language-design-covers-the-syntax-and-semantics-of-the-example-port-code"},"Language design covers the syntax and semantics of the example port code.")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#demo-implementation-of-core-features-with-working-examples"},"Demo implementation of core features with working examples")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#carbon-explorer-implementation-of-core-features-with-test-cases"},"Carbon explorer implementation of core features with test cases")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#beyond-2022"},"Beyond 2022"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#potential-2023-goals-finish-02-language-stop-experimenting"},"Potential 2023 goals: finish 0.2 language, stop experimenting")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#potential-2024-2025-goals-_ship_-10-language--organization"},"Potential 2024-2025 goals: ",(0,o.kt)("em",{parentName:"a"},"ship")," 1.0 language & organization"))))),(0,o.kt)("h2",{id:"objective-for-2022-make-carbon-public-finish-01-language"},"Objective for 2022: make Carbon public, finish 0.1 language"),(0,o.kt)("p",null,"We have two primary goals for 2022:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Shift the experiment to being public."),(0,o.kt)("li",{parentName:"ul"},"Reach the point where the core language design is substantially complete.")),(0,o.kt)("h3",{id:"completing-the-language-design"},"Completing the language design"),(0,o.kt)("p",null,"By the end of 2022, the core Carbon language design should be substantially\ncomplete, including designs for expressions and statements, classes, generics\nand templates, core built-in types and interfaces such as integers and pointers,\nand interoperability with C++. The design choices made to reach this point are\nexpected to be experimental, and many of them may need revisiting before we\nreach 1.0, but the broad shape of the language should be clear at this point,\nand it should be possible to write non-trivial Carbon programs."),(0,o.kt)("p",null,"An initial rough framework for the core standard library functionality should be\nprovided, as necessary to support the core language components. A largely\ncomplete implementation of the core language design should be available in\nCarbon explorer. The toolchain should be able to parse the core language design,\nwith some support for name lookup and type-checking."),(0,o.kt)("p",null,"We should have begun writing non-trivial portions of the standard library, such\nas common higher-level data structures and algorithms."),(0,o.kt)("h3",{id:"going-public"},"Going public"),(0,o.kt)("p",null,"At some point in 2022 we should shift the experiment to be public. This will\nallow us to significantly expand both those directly involved and contributing\nto Carbon but also those able to evaluate and give us feedback."),(0,o.kt)("p",null,"We don't expect Carbon to shift away from an experiment until after it becomes\npublic and after we have been able to collect and incorporate a reasonable\namount of feedback from the broader industry and community. This feedback will\nbe central in determining whether Carbon should continue past the experimental\nstage."),(0,o.kt)("h2",{id:"key-results-in-2022"},"Key results in 2022"),(0,o.kt)("p",null,"There are several milestones that we believe are on the critical path to\nsuccessfully achieving our main goal for the year, and point to concrete areas\nof focus for the project."),(0,o.kt)("h3",{id:"broaden-participation-so-no-organization-is-50"},"Broaden participation so no organization is >50%"),(0,o.kt)("p",null,"Our goal is that no single organization makes up >50% of participation in the\nCarbon project, to ensure that we are including as broad and representative a\nset of perspectives in the evolution of Carbon as possible."),(0,o.kt)("p",null,"As a proxy for the amount of participation, we will count the number of active\nparticipants from each organization in 2022, with the aim that each organization\nis represented by less than 50% of all active participants."),(0,o.kt)("p",null,"There are many ways in which someone could be an active participant, and when\nthe leads come to reflect on this at the end of the year, we expect this to be a\njudgment call. We will consider at least the following when measuring our\nsuccess on this objective:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Pull requests authored and reviewed, including proposals, code changes, and\ndocumentation changes."),(0,o.kt)("li",{parentName:"ul"},"Contribution to discussions, including Discord, teleconferences, and GitHub\nissues.")),(0,o.kt)("h3",{id:"example-ports-of-c-libraries-to-carbon-100-of-woff2-99-of-re2"},"Example ports of C++ libraries to Carbon (100% of ",(0,o.kt)("a",{parentName:"h3",href:"https://github.com/google/woff2"},"woff2"),", 99% of ",(0,o.kt)("a",{parentName:"h3",href:"https://github.com/google/re2"},"RE2"),")"),(0,o.kt)("p",null,"The first part of this result is that all of the woff2 library is ported to\nCarbon in a way that exports the same C++ API. There should be no gaps in this\nport given that woff2 has a very simple C++ API and uses few C++ language\nfeatures."),(0,o.kt)("p",null,"RE2 is a larger library using significantly more language features. For that\npart of the result, fewer than 1% of its C++ lines of code should be missing a\nsemantically meaningful port into Carbon code."),(0,o.kt)("p",null,"An important nuance of this goal is that it doesn't include building a complete\nCarbon standard library beyond the most basic necessary types. The intent is to\nexercise and show the interoperability layers of Carbon by re-using the C++\nstandard library in many cases and exporting a compatible C++ API to both woff2\nand RE2's current API."),(0,o.kt)("p",null,"While this key result isn't directly tied to the main objective, we believe it\nrepresents a critical milestone for being able to achieve this objective. It\nboth measures our progress solidifying Carbon's design and demonstrating the\nvalue proposition of Carbon."),(0,o.kt)("p",null,"Note that both woff2 and RE2 libraries are chosen somewhat arbitrarily and could\neasily be replaced with a different, more effective libraries to achieve the\nfundamental result of demonstrating a compelling body of cohesive design and the\noverarching value proposition."),(0,o.kt)("h4",{id:"language-design-covers-the-syntax-and-semantics-of-the-example-port-code"},"Language design covers the syntax and semantics of the example port code."),(0,o.kt)("p",null,"We should have a clear understanding of the syntax and semantics used by these\nexample ports. We should be able to demonstrate that self-contained portions of\nthe ported code work correctly using Carbon explorer."),(0,o.kt)("h3",{id:"demo-implementation-of-core-features-with-working-examples"},"Demo implementation of core features with working examples"),(0,o.kt)("p",null,"A core set of Carbon features should be implemented sufficiently to build\nworking examples of those features and run them successfully. These features\ncould include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"User-defined types, functions, namespaces, packages, and importing."),(0,o.kt)("li",{parentName:"ul"},"Basic generic functions and types using interfaces."),(0,o.kt)("li",{parentName:"ul"},"Initial/simple implementation of safety checking including at least bounds\nchecking, simple lifetime checking, and simple initialization checking."),(0,o.kt)("li",{parentName:"ul"},"Sum types sufficient for optional-types to model nullable pointers."),(0,o.kt)("li",{parentName:"ul"},"Pattern matching sufficient for basic function overloading on types and\narity, as well as unwrapping of optional types for guard statements.")),(0,o.kt)("p",null,"Stretch goals if we can hit the above:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Instantiating a basic C++ template through interop layer for use within\nCarbon.")),(0,o.kt)("p",null,"The demo implementation should also provide demos outside of specific language\nfeatures including:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Basic benchmarking of the different phases of compilation (lexing, parsing,\netc)."),(0,o.kt)("li",{parentName:"ul"},"A basic REPL command line.")),(0,o.kt)("p",null,"Stretch goals if we can hit the above:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Automatic code formatter on top of the implementation infrastructure."),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("a",{parentName:"li",href:"https://compiler-explorer.com/"},"compiler explorer")," fork with REPL\nintegrated.")),(0,o.kt)("p",null,"Benchmarking at this stage isn't expected to include extensive optimization.\nInstead, it should focus on letting us track large/high-level impact on\ndifferent phases as they are developed or features are added. They may also help\nillustrate initial high-level performance characteristics of the implementation,\nbut the long term focus should be on end-to-end user metrics."),(0,o.kt)("p",null,"Automatic code formatting could be achieved many ways, but it seems useful to\nensure the language and implementation both support use cases like formatting."),(0,o.kt)("h3",{id:"carbon-explorer-implementation-of-core-features-with-test-cases"},"Carbon explorer implementation of core features with test cases"),(0,o.kt)("p",null,"This should include both a human readable rendering of the formal semantics as\nwell as an execution environment to run test cases through those semantics. The\nimplementation should cover enough of the core language that example code, such\nas the above ports of woff2 and RE2 and the Carbon standard library, can be\nverified with Carbon explorer."),(0,o.kt)("h2",{id:"beyond-2022"},"Beyond 2022"),(0,o.kt)("p",null,"Longer term goals are hard to pin down and always subject to change, but we want\nto give an idea of what kinds of things are expected at a high level further out\nin order to illustrate how the goals and priorities we have in 2022 feed into\nsubsequent years."),(0,o.kt)("h3",{id:"potential-2023-goals-finish-02-language-stop-experimenting"},"Potential 2023 goals: finish 0.2 language, stop experimenting"),(0,o.kt)("p",null,"Once Carbon is moving quickly and getting public feedback, we should be able to\nconclude the experiment. We should know if this is the right direction for\nmoving C++ forward for a large enough portion of the industry and community, and\nwhether the value proposition of this direction outweighs the cost."),(0,o.kt)("p",null,"However, there will still be a ",(0,o.kt)("em",{parentName:"p"},"lot")," of work to make Carbon into a production\nquality language, even if the experiment concludes successfully."),(0,o.kt)("p",null,"Some concrete goals that might show up in this time frame:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Self-hosting toolchain, including sufficient Carbon standard library\nsupport."),(0,o.kt)("li",{parentName:"ul"},"Expand design of standard library to include, at least directionally,\ncritical and complex areas. For example: concurrency/parallelism and\nnetworking/IO."),(0,o.kt)("li",{parentName:"ul"},"Migration tooling sufficient to use with real-world libraries and systems.\nThis might be used to help with self-hosting Carbon, as well as by initial\nearly adopters evaluating Carbon."),(0,o.kt)("li",{parentName:"ul"},"Create a foundation or similar organization to manage the Carbon project,\nseparate from any corporate entities that fund work on Carbon.")),(0,o.kt)("h3",{id:"potential-2024-2025-goals-ship-10-language--organization"},"Potential 2024-2025 goals: ",(0,o.kt)("em",{parentName:"h3"},"ship")," 1.0 language & organization"),(0,o.kt)("p",null,"A major milestone will be the first version of a production language. We should\nalso have finished transferring all governance of Carbon to an independent open\nsource organization at that point. However, we won't know what a more realistic\nor clear schedule for these milestones will be until we get closer."),(0,o.kt)("p",null,"Another important aspect of our goals in this time frame is expanding them to\nencompass the broader ecosystem of the language:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"End-to-end developer tooling and experience."),(0,o.kt)("li",{parentName:"ul"},"Teaching and training material."),(0,o.kt)("li",{parentName:"ul"},"Package management."),(0,o.kt)("li",{parentName:"ul"},"Etc.")))}c.isMDXComponent=!0}}]);